% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adjust_service_counts.R
\name{adjust_service_counts}
\alias{adjust_service_counts}
\title{Adjust Service Counts with Reporting Rate, k-Factor, and Outlier Adjustments}
\usage{
adjust_service_counts(
  .data,
  adjustment = c("default", "custom", "none"),
  k_factors = NULL
)
}
\arguments{
\item{.data}{A data frame containing the merged service data for adjustment.}

\item{adjustment}{A character vector specifying the adjustment type. Options are:
\describe{
\item{"default"}{Applies default k-factors (0.25 for each indicator group).}
\item{"custom"}{Applies user-specified \code{k_factors}, which must be between 0 and 1 for each indicator group.}
\item{"none"}{Skips adjustments and returns the data as-is.}
}}

\item{k_factors}{A named numeric vector of custom k-factor values between 0 and 1 for each indicator group (e.g., \code{c(anc = 0.3, idelv = 0.2, ...)}). Only used if \code{adjustment = "custom"}.}
}
\value{
A \code{cd_data} object.
}
\description{
This function adjusts service counts based on reporting rates, applies k-factor
adjustments to compensate for incomplete reporting, and handles outliers using
Hampel's method. It supports default adjustments, custom k-factor adjustments,
and no adjustments.
}
\details{
The function operates in several steps:
\enumerate{
\item \strong{Validate Input}: Ensures \code{.data} is properly structured and that
\code{adjustment} is one of the specified options using \code{arg_match}. If
\code{adjustment = "custom"}, validates \code{k_factors} to ensure values are between
0 and 1.
\item \strong{Define k-Factors}: Sets default k-factor values for each indicator group
if \code{adjustment = "default"}. For \code{adjustment = "custom"}, the provided
\code{k_factors} vector replaces default values for any matching indicator groups.
\item \strong{Exit for "none" Adjustment}: If \code{adjustment = "none"}, the function saves
the data without modifications and returns it directly.
\item \strong{Indicator Grouping}: Defines specific indicators within each k-factor
group, allowing targeted adjustments for each category (e.g., ANC, Delivery,
PNC, Vaccination).
\item \strong{Replace Low Reporting Rates}:
\itemize{
\item Reporting rates below 75\% are replaced with \code{NA}, and district-level medians
are calculated for each indicator.
\item These medians fill in for the low reporting rates.
}
\item \strong{Apply k-Factor Adjustments}:
\itemize{
\item For each indicator in \code{indicator_groups}, applies a correction using the
specified k-factor if the reporting rate is above zero.
\item Adjustments are calculated as \code{value * (1 + (1 / (reporting_rate / 100) - 1) * k_factor)}.
}
\item \strong{Outlier Adjustment Using Hampel’s Method}:
\itemize{
\item For each indicator, calculates the median and MAD within each district
and sets outlier bounds at \verb{median ± 5 * MAD}.
\item Values outside these bounds are replaced with the district median.
}
\item \strong{Replace Remaining Missing Values}:
\itemize{
\item After outlier adjustments, any remaining \code{NA} values for each indicator
are replaced with the district-level median to ensure completeness.
}
\item \strong{Cleanup}:
\itemize{
\item Removes intermediate columns used during calculations (e.g., \code{mad}, \code{med},
\code{adjusted}), leaving only final adjusted values.
}
}
}
\examples{
\dontrun{
# Default adjustment
adjusted_data <- adjust_service_counts(data, adjustment = "default")

# Custom adjustment with specific k-factors
custom_k <- c(anc = 0.3, idelv = 0.2, pnc = 0.35, vacc = 0.4, opd = 0.3,
  ipd = 0.25)
adjusted_data_custom <- adjust_service_counts(data, adjustment = "custom",
  k_factors = custom_k)

# No adjustment
unadjusted_data <- adjust_service_counts(data, adjustment = "none")
}

}
